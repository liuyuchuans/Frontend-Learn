<!DOCTYPE html>
<html>
<head>
    <title>Hello World</title>

    <title>Hello <%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.3/socket.io.js"></script>

    <script>
        //建立socket链接
        const socket = io('//172.16.79.128:12312');



        const iceServer = {
            iceServers: [
                {
                    urls: ["stun:eu-turn4.xirsys.com"]
                },
                {
                    username: "ml0jh0qMKZKd9P_9C0UIBY2G0nSQMCFBUXGlk6IXDJf8G2uiCymg9WwbEJTMwVeiAAAAAF2__hNSaW5vbGVl",
                    credential: "4dd454a6-feee-11e9-b185-6adcafebbb45",
                    urls: [
                        "turn:eu-turn4.xirsys.com:80?transport=udp",
                        "turn:eu-turn4.xirsys.com:3478?transport=tcp"
                    ]
                }
            ]
        };

        // function handleConnection(event) {
        //     const peerConnection = event.target;
        //     const iceCandidate = event.candidate;

        //     if (iceCandidate) {
        //         const newIceCandidate = new RTCIceCandidate(iceCandidate);
        //         const otherPeer = getOtherPeer(peerConnection);

        //         otherPeer.addIceCandidate(newIceCandidate)
        //         .then(() => {
        //             handleConnectionSuccess(peerConnection);
        //         }).catch((error) => {
        //             handleConnectionFailure(peerConnection, error);
        //         });

        //         trace(`${getPeerName(peerConnection)} ICE candidate:\n` +
        //             `${event.candidate.candidate}.`);
        //     }
        // }

        // // function createConn() {
        // //     console.log("CONNECT BTN ON");
        // //     localStream = stream
        // //     // 显示本地视频流
        // //     //localVideo.srcObject = stream;
        // //     //谷歌公共stun服务器
        // //     let serverConfig = {
        // //         "iceServers": [
        // //             { "urls": ["turn:192.168.1.133:3478"], 
        // //             "username": "webrtc", 
        // //             "credential": "webrtc" 
        // //             }
        // //         ]
        // //     };
        // //     // 呼叫者
        // //     let localPeer = new RTCPeerConnection(serverConfig)
        // //     // 被呼叫者
        // //     let remotePeer = new RTCPeerConnection(serverConfig)
        // //     // 设置媒体流监听，将本地流添加到RTCPeerConnection对象
        // //     localStream.getTracks().forEach((track) => {
        // //     localPeer.addTrack(track, localStream);
        // //     });
        // //     localPeer.addStream(stream);
        // // }



        // let serverConfig = {
        //         "iceServers": [
        //             { "urls": ["stun:numb.viagenie.ca:3478"], 
        //             "username": "webrtc", 
        //             "credential": "webrtc" 
        //             }
        //         ]
        //     };

        // let localPeerConnection;
        // localPeerConnection = new RTCPeerConnection(serverConfig);
        // localPeerConnection.addEventListener('icecandidate', handleConnection);
        // //localPeerConnection.addEventListener(
        // //    'iceconnectionstatechange', handleConnectionChange);


        // function getUserMedia(constrains, success, error) {
        //     if (navigator.mediaDevices.getUserMedia) {
        //         //最新标准API
        //         promise = navigator.mediaDevices.getUserMedia(constrains).then(success).catch(error);
        //     } else if (navigator.webkitGetUserMedia) {
        //         //webkit内核浏览器
        //         promise = navigator.webkitGetUserMedia(constrains).then(success).catch(error);
        //     } else if (navigator.mozGetUserMedia) {
        //         //Firefox浏览器
        //         promise = navagator.mozGetUserMedia(constrains).then(success).catch(error);
        //     } else if (navigator.getUserMedia) {
        //         //旧版API
        //         promise = navigator.getUserMedia(constrains).then(success).catch(error);
        //     }
        // }

        // function canGetUserMediaUse() {
        //     return !!(navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
        // }

        // // 当获得到自己的公网地址后，发送给其它客户端
        // localPeerConnection.onicecandidate = function(event) {
        //     console.log('I got my icecandidate info')
        //     if (event.candidate) {
        //         console.log(event.candidate.candidate)
        //     }
        //     socket.emit('message', { 'type' : 'onicecandidate','event' : event.candidate});
        // }
        // // 如果监测到本地媒体流连接到本地，将其绑定到一个video标签上输出
        // // localPeer.ontrack = function(e) {
        // //     // 因为媒体流是一个数组
        // //     if (remoteVideo.srcObject !== e.streams[0]) {
        // //         remoteVideo.srcObject = e.streams[0];
        // //         console.log('received remote stream');
        // //     }
        // // };


        // function showVideo() {
        //     if (canGetUserMediaUse()) {
        //         getUserMedia({
        //             video: true,
        //             audio: true
        //         }, function (stream) {
        //             var localStream = stream;
        //             const video = document.getElementById('video');
        //             video.srcObject = stream;
        //             video.play();


        //             localPeerConnection.addStream(localStream);
        //             console.log('Added local stream to localPeerConnection.');

        //             console.log(localPeerConnection);


        //         }, function (error) {
        //             console.log("访问用户媒体设备失败：", error.name, error.message);
        //         })
        //     } else { alert('您的浏览器不兼容'); }
        // }

        // function capture() {
        //     if (promise) {
        //         const canvas = document.getElementById('canvas');
        //         const video = document.getElementById('video');
        //         canvas.width = video.clientWidth;
        //         canvas.height = video.clientHeight;
        //         var context = canvas.getContext('2d');
        //         context.drawImage(video, 0, 0);
        //     } else {
        //         alert('请先打开摄像头');
        //     }
        // }
    </script>

</head>
<body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>

    <div>
        <video autoplay controls id="video"></video>
        <button onclick="showVideo()">打开摄像头</button>
        <canvas id="canvas"></canvas>
        <button onclick="capture()">拍照</button>
        <button id="connect">CONNECT</button>
    </div>
</body>
<script>


    var userName = "username";
    var room = '1001 room';
    var socketID = 0;
    socket.on('connect', function () {
        socketID = socket.io.engine.id;
    
        socket.emit( 'subscribe', {
                'room': room,
                'socketID': socketID
            });
    
        console.log('hello world!' + socketID)
        //userName = prompt("请输入你的姓名?") || userName;
        //socket.emit('join', userName);
        socket.emit('message', 'hello world!' + socketID);
    });

    //点对点准备建立连接
    socket.on( 'new user', ( data ) => {
                console.log("hello new user");
                socket.emit( 'newUserStart', { to: data.socketID, sender: socketID } );
            });


    // socket.emit('message', { my: 'data client' });
    socket.on("connect", () => {
        console.log(socket.id); // x8WIv7-mJelg7on_ALbx
    });

    socket.on("disconnect", () => {
        console.log(socket.id); // undefined
    });





    //
</script>
</html>